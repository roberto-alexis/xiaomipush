/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package xiaomi;

import com.xiaomi.xmpush.server.*;

import java.io.IOException;

import static java.lang.System.exit;

public class App {
    private final String appSecret;
    private final String deviceToken;

    public static void main(String[] args) throws IOException {
        if (args.length < 2) {
            System.out.println("Use: xiaomipush {app-secret} {device-token}");
            exit(-1);
        }
        String appSecret = args[0];
        String deviceToken = args[1];
        App app = new App(appSecret, deviceToken);
        app.devTools();
        String messageId = app.sendMessage();
        app.trace(messageId);
    }

    public App(String appSecret, String deviceToken) {
        this.appSecret = appSecret;
        this.deviceToken = deviceToken;
    }

    private void devTools() throws IOException {
        DevTools devTools = new DevTools(appSecret);
        System.out.println(devTools.getPresence("com.jwa.otter_merchant", deviceToken, 3));
    }
    private String sendMessage() throws IOException {
        Constants.useOfficial();
        Sender sender = new Sender(appSecret, Region.Other);
        String messagePayload = "This is a message";
        String title = "notification title";
        String description = "notification description";
        Message message = new Message.Builder()
                .title(title)
                .description(description)
                .payload(messagePayload)
                .restrictedPackageName("com.jwa.otter_merchant")
                .notifyType(1)
                .build();
        Result result = sender.send(message, deviceToken, 3);
        System.out.println("MessageId: " + result.getMessageId()
                + " ErrorCode: " + result.getErrorCode().getFullDescription()
                + " Reason: " + result.getReason());
        return result.getMessageId();
    }

    private void trace(String messageID) throws IOException {
        Tracer tracer = new Tracer(appSecret);
        System.out.println(tracer.getMessageStatus(messageID, 3));
    }
}
